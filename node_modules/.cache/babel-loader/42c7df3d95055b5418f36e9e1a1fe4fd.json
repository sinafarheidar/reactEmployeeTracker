{"ast":null,"code":"import { useCallback, useMemo, useState } from 'react';\nexport function useNumber(initial, {\n  upperLimit,\n  lowerLimit,\n  loop,\n  step = 1\n} = {}) {\n  const [value, setValue] = useState(initial);\n  const decrease = useCallback(d => {\n    setValue(aValue => {\n      const decreaseBy = d !== undefined ? d : step;\n      const nextValue = aValue - decreaseBy;\n\n      if (lowerLimit !== undefined) {\n        if (nextValue + decreaseBy > lowerLimit) {\n          return nextValue;\n        }\n\n        if (loop && upperLimit) {\n          return upperLimit;\n        }\n\n        return aValue;\n      }\n\n      return nextValue;\n    });\n  }, [loop, lowerLimit, step, upperLimit]);\n  const increase = useCallback(i => {\n    setValue(aValue => {\n      const increaseBy = i !== undefined ? i : step;\n      const nextValue = aValue + increaseBy;\n\n      if (upperLimit !== undefined) {\n        if (nextValue - increaseBy < upperLimit) {\n          return nextValue;\n        }\n\n        if (loop) {\n          return initial;\n        }\n\n        return aValue;\n      }\n\n      return nextValue;\n    });\n  }, [initial, loop, step, upperLimit]);\n  const actions = useMemo(() => ({\n    setValue,\n    increase,\n    decrease\n  }), [decrease, increase]);\n  return [value, actions];\n}\nexport default useNumber;","map":{"version":3,"sources":["../../../src/array/useNumber.ts"],"names":[],"mappings":"AAAA,SAA2C,WAA3C,EAAwD,OAAxD,EAAiE,QAAjE,QAAiF,OAAjF;AASA,OAAM,SAAU,SAAV,CACJ,OADI,EAEJ;AACE,EAAA,UADF;AAEE,EAAA,UAFF;AAGE,EAAA,IAHF;AAIE,EAAA,IAAI,GAAG;AAJT,IAUI,EAZA,EAYE;AAEN,QAAM,CAAC,KAAD,EAAQ,QAAR,IAAoB,QAAQ,CAAS,OAAT,CAAlC;AACA,QAAM,QAAQ,GAAG,WAAW,CACzB,CAAD,IAAe;AACb,IAAA,QAAQ,CAAC,MAAM,IAAG;AAChB,YAAM,UAAU,GAAG,CAAC,KAAK,SAAN,GAAkB,CAAlB,GAAsB,IAAzC;AACA,YAAM,SAAS,GAAG,MAAM,GAAG,UAA3B;;AAEA,UAAI,UAAU,KAAK,SAAnB,EAA8B;AAC5B,YAAI,SAAS,GAAG,UAAZ,GAAyB,UAA7B,EAAyC;AACvC,iBAAO,SAAP;AACD;;AACD,YAAI,IAAI,IAAI,UAAZ,EAAwB;AACtB,iBAAO,UAAP;AACD;;AACD,eAAO,MAAP;AACD;;AACD,aAAO,SAAP;AACD,KAdO,CAAR;AAeD,GAjByB,EAkB1B,CAAC,IAAD,EAAO,UAAP,EAAmB,IAAnB,EAAyB,UAAzB,CAlB0B,CAA5B;AAoBA,QAAM,QAAQ,GAAG,WAAW,CACzB,CAAD,IAAe;AACb,IAAA,QAAQ,CAAC,MAAM,IAAG;AAChB,YAAM,UAAU,GAAG,CAAC,KAAK,SAAN,GAAkB,CAAlB,GAAsB,IAAzC;AACA,YAAM,SAAS,GAAG,MAAM,GAAG,UAA3B;;AAEA,UAAI,UAAU,KAAK,SAAnB,EAA8B;AAC5B,YAAI,SAAS,GAAG,UAAZ,GAAyB,UAA7B,EAAyC;AACvC,iBAAO,SAAP;AACD;;AACD,YAAI,IAAJ,EAAU;AACR,iBAAO,OAAP;AACD;;AACD,eAAO,MAAP;AACD;;AACD,aAAO,SAAP;AACD,KAdO,CAAR;AAeD,GAjByB,EAkB1B,CAAC,OAAD,EAAU,IAAV,EAAgB,IAAhB,EAAsB,UAAtB,CAlB0B,CAA5B;AAoBA,QAAM,OAAO,GAAG,OAAO,CACrB,OAAO;AACL,IAAA,QADK;AAEL,IAAA,QAFK;AAGL,IAAA;AAHK,GAAP,CADqB,EAMrB,CAAC,QAAD,EAAW,QAAX,CANqB,CAAvB;AAQA,SAAO,CAAC,KAAD,EAAQ,OAAR,CAAP;AACD;AAED,eAAe,SAAf","sourceRoot":"","sourcesContent":["import { useCallback, useMemo, useState } from 'react';\nexport function useNumber(initial, { upperLimit, lowerLimit, loop, step = 1, } = {}) {\n    const [value, setValue] = useState(initial);\n    const decrease = useCallback((d) => {\n        setValue(aValue => {\n            const decreaseBy = d !== undefined ? d : step;\n            const nextValue = aValue - decreaseBy;\n            if (lowerLimit !== undefined) {\n                if (nextValue + decreaseBy > lowerLimit) {\n                    return nextValue;\n                }\n                if (loop && upperLimit) {\n                    return upperLimit;\n                }\n                return aValue;\n            }\n            return nextValue;\n        });\n    }, [loop, lowerLimit, step, upperLimit]);\n    const increase = useCallback((i) => {\n        setValue(aValue => {\n            const increaseBy = i !== undefined ? i : step;\n            const nextValue = aValue + increaseBy;\n            if (upperLimit !== undefined) {\n                if (nextValue - increaseBy < upperLimit) {\n                    return nextValue;\n                }\n                if (loop) {\n                    return initial;\n                }\n                return aValue;\n            }\n            return nextValue;\n        });\n    }, [initial, loop, step, upperLimit]);\n    const actions = useMemo(() => ({\n        setValue,\n        increase,\n        decrease,\n    }), [decrease, increase]);\n    return [value, actions];\n}\nexport default useNumber;\n//# sourceMappingURL=useNumber.js.map"]},"metadata":{},"sourceType":"module"}