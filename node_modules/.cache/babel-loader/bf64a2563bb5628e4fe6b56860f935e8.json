{"ast":null,"code":"var _jsxFileName = \"/Users/grimygod/Documents/Code/Classwork/UCSD-SD-FSF-PT-09-2019-U-C/19-React/reactpractice/src/components/Math.js\";\nimport React from \"react\"; // Create a new component named \"Math\"\n// Render one Math component in the place of each \"?\" mark\n// Math should accept 3 props\n// num1, operator, and num2\n// Math should return a span tag displaying the result e.g.  19 + 341 = 360\n\nconst Math = ({\n  num1,\n  num2,\n  operator\n}) => {\n  let newAns = 0;\n\n  if (operator === \"+\") {\n    newAns = {\n      num1\n    } + {\n      num2\n    };\n    JSON.stringify(newAns);\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \" \", num1, \" + \", num2, \" = \", newAns, \" \");\n  }\n\n  if (operator === \"-\") {\n    newAns = {\n      num1\n    } - {\n      num2\n    };\n    JSON.stringify(newAns);\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \" \", num1, \" - \", num2, \" = \", newAns, \" \");\n  }\n\n  if (operator === \"*\") {\n    newAns = {\n      num1\n    } * {\n      num2\n    };\n    JSON.stringify(newAns);\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \" \", num1, \" * \", num2, \" = \", newAns, \" \");\n  }\n\n  if (operator === \"+\") {\n    newAns = {\n      num1\n    } + {\n      num2\n    };\n    JSON.stringify(newAns);\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \" \", num1, \" + \", num2, \" = \", newAns, \" \");\n  }\n};\n\nexport default Math;","map":{"version":3,"sources":["/Users/grimygod/Documents/Code/Classwork/UCSD-SD-FSF-PT-09-2019-U-C/19-React/reactpractice/src/components/Math.js"],"names":["React","Math","num1","num2","operator","newAns","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;;AACA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA;AAAd,CAAD,KAA8B;AACvC,MAAIC,MAAM,GAAG,CAAb;;AAEA,MAAID,QAAQ,KAAK,GAAjB,EAAsB;AAClBC,IAAAA,MAAM,GAAG;AAACH,MAAAA;AAAD,QAAS;AAACC,MAAAA;AAAD,KAAlB;AACAG,IAAAA,IAAI,CAACC,SAAL,CAAeF,MAAf;AACA,WACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAQH,IAAR,SAAiBC,IAAjB,SAA0BE,MAA1B,MADI;AACuC;;AAE3C,MAAID,QAAQ,KAAK,GAAjB,EAAsB;AAClBC,IAAAA,MAAM,GAAG;AAACH,MAAAA;AAAD,QAAS;AAACC,MAAAA;AAAD,KAAlB;AACAG,IAAAA,IAAI,CAACC,SAAL,CAAeF,MAAf;AACA,WACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAQH,IAAR,SAAiBC,IAAjB,SAA0BE,MAA1B,MADI;AACuC;;AAE3C,MAAID,QAAQ,KAAK,GAAjB,EAAsB;AAClBC,IAAAA,MAAM,GAAG;AAACH,MAAAA;AAAD,QAAS;AAACC,MAAAA;AAAD,KAAlB;AACAG,IAAAA,IAAI,CAACC,SAAL,CAAeF,MAAf;AACA,WACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAQH,IAAR,SAAiBC,IAAjB,SAA0BE,MAA1B,MADI;AACuC;;AAE3C,MAAID,QAAQ,KAAK,GAAjB,EAAsB;AAClBC,IAAAA,MAAM,GAAG;AAACH,MAAAA;AAAD,QAAS;AAACC,MAAAA;AAAD,KAAlB;AACAG,IAAAA,IAAI,CAACC,SAAL,CAAeF,MAAf;AACA,WACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAQH,IAAR,SAAiBC,IAAjB,SAA0BE,MAA1B,MADI;AACuC;AAC9C,CA1BD;;AA4BA,eAAeJ,IAAf","sourcesContent":["import React from \"react\";\n\n// Create a new component named \"Math\"\n// Render one Math component in the place of each \"?\" mark\n// Math should accept 3 props\n// num1, operator, and num2\n// Math should return a span tag displaying the result e.g.  19 + 341 = 360\nconst Math = ({ num1, num2, operator }) => {\n    let newAns = 0\n\n    if (operator === \"+\") {\n        newAns = {num1} + {num2}\n        JSON.stringify(newAns)\n        return (\n    <span> {num1} + {num2} = {newAns} </span>)}\n  \n    if (operator === \"-\") {\n        newAns = {num1} - {num2}\n        JSON.stringify(newAns)\n        return (\n    <span> {num1} - {num2} = {newAns} </span>)}\n      \n    if (operator === \"*\") {\n        newAns = {num1} * {num2}\n        JSON.stringify(newAns)\n        return (\n    <span> {num1} * {num2} = {newAns} </span>)}\n\n    if (operator === \"+\") {\n        newAns = {num1} + {num2}\n        JSON.stringify(newAns)\n        return (\n    <span> {num1} + {num2} = {newAns} </span>)}\n}\n\nexport default Math;"]},"metadata":{},"sourceType":"module"}