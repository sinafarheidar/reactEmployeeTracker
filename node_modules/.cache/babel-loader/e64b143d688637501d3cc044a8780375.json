{"ast":null,"code":"import { useCallback, useMemo, useState } from 'react';\nexport function useInput(initial = '') {\n  const stringified = initial.toString();\n  const [value, setValue] = useState(stringified);\n  const onChange = useCallback(e => setValue(e.target.value), []);\n  const clear = useCallback(() => setValue(''), []);\n  return useMemo(() => ({\n    value,\n    setValue,\n    hasValue: value !== undefined && value !== null && value.trim() !== '',\n    clear,\n    onChange,\n    eventBind: {\n      onChange,\n      value\n    },\n    valueBind: {\n      onChange: setValue,\n      value\n    }\n  }), [clear, onChange, value]);\n}\nexport default useInput;","map":{"version":3,"sources":["../../src/useInput.ts"],"names":[],"mappings":"AACA,SAAS,WAAT,EAAsB,OAAtB,EAA+B,QAA/B,QAA+C,OAA/C;AAiBA,OAAM,SAAU,QAAV,CAAmB,OAAA,GAAqC,EAAxD,EAA0D;AAC9D,QAAM,WAAW,GAAG,OAAO,CAAC,QAAR,EAApB;AACA,QAAM,CAAC,KAAD,EAAQ,QAAR,IAAoB,QAAQ,CAAS,WAAT,CAAlC;AACA,QAAM,QAAQ,GAAG,WAAW,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,MAAF,CAAS,KAAV,CAAd,EAAgC,EAAhC,CAA5B;AAEA,QAAM,KAAK,GAAG,WAAW,CAAC,MAAM,QAAQ,CAAC,EAAD,CAAf,EAAqB,EAArB,CAAzB;AACA,SAAO,OAAO,CACZ,OAAO;AACL,IAAA,KADK;AAEL,IAAA,QAFK;AAGL,IAAA,QAAQ,EAAE,KAAK,KAAK,SAAV,IAAuB,KAAK,KAAK,IAAjC,IAAyC,KAAK,CAAC,IAAN,OAAiB,EAH/D;AAIL,IAAA,KAJK;AAKL,IAAA,QALK;AAML,IAAA,SAAS,EAAE;AACT,MAAA,QADS;AAET,MAAA;AAFS,KANN;AAUL,IAAA,SAAS,EAAE;AACT,MAAA,QAAQ,EAAE,QADD;AAET,MAAA;AAFS;AAVN,GAAP,CADY,EAgBZ,CAAC,KAAD,EAAQ,QAAR,EAAkB,KAAlB,CAhBY,CAAd;AAkBD;AAED,eAAe,QAAf","sourceRoot":"","sourcesContent":["import { useCallback, useMemo, useState } from 'react';\nexport function useInput(initial = '') {\n    const stringified = initial.toString();\n    const [value, setValue] = useState(stringified);\n    const onChange = useCallback(e => setValue(e.target.value), []);\n    const clear = useCallback(() => setValue(''), []);\n    return useMemo(() => ({\n        value,\n        setValue,\n        hasValue: value !== undefined && value !== null && value.trim() !== '',\n        clear,\n        onChange,\n        eventBind: {\n            onChange,\n            value,\n        },\n        valueBind: {\n            onChange: setValue,\n            value,\n        },\n    }), [clear, onChange, value]);\n}\nexport default useInput;\n//# sourceMappingURL=useInput.js.map"]},"metadata":{},"sourceType":"module"}