{"ast":null,"code":"var _jsxFileName = \"/Users/grimygod/Documents/Code/Classwork/UCSD-SD-FSF-PT-09-2019-U-C/20-State/reactpractice/src/App.js\";\nimport React, { useState } from \"react\";\nimport Home from \"./pages/Home\";\nimport AlertContext from \"./utils/AlertContext\";\n\nfunction App() {\n  const [pageState, setPageState] = useState({\n    display: false,\n    theme: \"success\",\n    onClick: (theme, display) => {\n      // Remember, the setter method on state does not merge like this.setState does\n      // We use the spread operator so that we don't lose our onClick method whenever the state is updated.\n      setPageState({ ...pageState,\n        theme,\n        display\n      });\n    }\n  }); // App component that provides initial context values\n  // Here we are overwritting the context object to be equal to the state of App\n\n  return React.createElement(AlertContext.Provider, {\n    value: pageState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Home, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/grimygod/Documents/Code/Classwork/UCSD-SD-FSF-PT-09-2019-U-C/20-State/reactpractice/src/App.js"],"names":["React","useState","Home","AlertContext","App","pageState","setPageState","display","theme","onClick"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;;AAEA,SAASC,GAAT,GAAe;AAEb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC;AACzCM,IAAAA,OAAO,EAAE,KADgC;AAEzCC,IAAAA,KAAK,EAAE,SAFkC;AAGzCC,IAAAA,OAAO,EAAE,CAACD,KAAD,EAAQD,OAAR,KAAoB;AAC3B;AACA;AACAD,MAAAA,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgBG,QAAAA,KAAhB;AAAuBD,QAAAA;AAAvB,OAAD,CAAZ;AACD;AAPwC,GAAD,CAA1C,CAFa,CAWb;AACA;;AACA,SACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEF,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AAGD,eAAeD,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Home from \"./pages/Home\";\nimport AlertContext from \"./utils/AlertContext\";\n\nfunction App() {\n\n  const [pageState, setPageState] = useState({\n    display: false,\n    theme: \"success\",\n    onClick: (theme, display) => {\n      // Remember, the setter method on state does not merge like this.setState does\n      // We use the spread operator so that we don't lose our onClick method whenever the state is updated.\n      setPageState({ ...pageState, theme, display });\n    }\n  });\n  // App component that provides initial context values\n  // Here we are overwritting the context object to be equal to the state of App\n  return (\n    <AlertContext.Provider value={pageState}>\n      <Home />\n    </AlertContext.Provider>\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}